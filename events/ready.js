const config = require("../config.js");
const { ActivityType } = require("discord.js");
const { REST } = require("@discordjs/rest");
const { Routes } = require("discord-api-types/v10");

module.exports = async (client) => {
    const rest = new REST({ version: "10" }).setToken(config.TOKEN || process.env.TOKEN);

    try {
        // ƒê·∫£m b·∫£o client.commands ƒë∆∞·ª£c await ƒë√∫ng c√°ch tr∆∞·ªõc khi s·ª≠ d·ª•ng
        const commands = await client.commands;
        await rest.put(Routes.applicationCommands(client.user.id), {
            body: commands,
        });
        console.log("‚úÖ Commands Loaded Successfully");
    } catch (err) {
        console.error("‚ùå Failed to load commands:", err.message);
    }

    const defaultActivity = {
        name: config.activityName,
        type: ActivityType.Listening
    };

    async function updateStatus() {
        try {
            // Ki·ªÉm tra n·∫øu client.riffy v√† client.riffy.players t·ªìn t·∫°i tr∆∞·ªõc khi truy c·∫≠p
            if (client.riffy && client.riffy.players) {
                const activePlayers = Array.from(client.riffy.players.values()).filter(player => player.playing);

                if (!activePlayers.length) {
                    //console.log("‚èπÔ∏è No song is currently playing. Setting default status.");
                    client.user.setActivity(defaultActivity);
                    return;
                }

                const player = activePlayers[0];

                // Ki·ªÉm tra s·ª± t·ªìn t·∫°i c·ªßa c√°c thu·ªôc t√≠nh l·ªìng nhau
                if (player && player.current && player.current.info && player.current.info.title) {
                    const trackName = player.current.info.title;
                    //console.log(`üéµ Now Playing: ${trackName}`);
                    client.user.setActivity({
                        name: `üé∂ ${trackName}`,
                        type: ActivityType.Listening
                    });
                } else {
                    //console.log("‚ö†Ô∏è Current track info is missing or player is undefined. Setting default status.");
                    client.user.setActivity(defaultActivity);
                }
            } else {
                console.warn("‚ö†Ô∏è client.riffy ho·∫∑c client.riffy.players ch∆∞a ƒë∆∞·ª£c kh·ªüi t·∫°o. ƒê·∫∑t tr·∫°ng th√°i m·∫∑c ƒë·ªãnh.");
                client.user.setActivity(defaultActivity);
            }
        } catch (error) {
            console.error("‚ùå L·ªói khi c·∫≠p nh·∫≠t tr·∫°ng th√°i:", error);
            // T√πy ch·ªçn: ƒê·∫∑t tr·∫°ng th√°i m·∫∑c ƒë·ªãnh khi c√≥ l·ªói
            client.user.setActivity(defaultActivity);
        }
    }

    setInterval(updateStatus, 5000);

    client.errorLog = config.errorLog;
};
